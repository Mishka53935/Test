теперь убери из этого кода функционал по изменению и удалению записей. 

<?php
/* 
Template Name: Admin Bookings Page 
Template Post Type: page
*/

function custom_password_form() {
    global $post;
    return '
    <div style="max-width:400px; margin:100px auto; padding:20px; text-align:center;">
        <h3>Доступ только для администраторов</h3>
        <form action="' . esc_url(site_url('wp-login.php?action=postpass', 'login_post')) . '" method="post">
            <input type="password" name="post_password" placeholder="Пароль" style="padding:8px; margin:10px; width:200px;">
            <button type="submit" style="padding:8px 20px; background:#007cba; color:white; border:none; border-radius:4px;">Войти</button>
        </form>
    </div>';
}
add_filter('the_password_form', 'custom_password_form');

if (post_password_required()) {
    echo get_the_password_form();
    return;
}

remove_all_actions('wp_head');
remove_all_actions('wp_footer');

global $wpdb;

// Получаем текущий месяц
$current_month = isset($_GET['month']) 
    ? DateTime::createFromFormat('Y-m', sanitize_text_field($_GET['month']))
    : new DateTime();
$current_month->modify('first day of this month');

// Получаем записи для текущего месяца
$start_date = $current_month->format('Y-m-01');
$end_date = $current_month->format('Y-m-t');

$bookings_count = $wpdb->get_results($wpdb->prepare("
    SELECT 
        DATE_FORMAT(booking_date, '%%Y-%%m-%%d') as day,
        COUNT(*) as count
    FROM {$wpdb->prefix}booking_orders
    WHERE booking_date BETWEEN %s AND %s
    GROUP BY day
", $start_date, $end_date), OBJECT_K);

// Получаем все записи
$bookings = $wpdb->get_results("
    SELECT 
        o.id,
        DATE(o.booking_date) as booking_date,
        TIME_FORMAT(o.start_time, '%H:%i') as start_time,
        TIME_FORMAT(o.end_time, '%H:%i') as end_time,
        o.client_name,
        o.client_phone,
        o.client_email,
        s.name as service_name 
    FROM {$wpdb->prefix}booking_orders o
    LEFT JOIN {$wpdb->prefix}booking_services s 
    ON o.service_id = s.id
    WHERE o.booking_date IS NOT NULL
    AND o.start_time IS NOT NULL
    AND o.end_time IS NOT NULL
    ORDER BY o.booking_date ASC, o.start_time ASC
");

$grouped = [];
foreach ($bookings as $booking) {
    if(
        empty($booking->id) ||
        empty($booking->booking_date) ||
        empty($booking->start_time) ||
        empty($booking->end_time)
    ) {
        error_log('Invalid booking data: ' . print_r($booking, true));
        continue;
    }
    $date = $booking->booking_date;
    $grouped[$date][] = $booking;
}

?><!DOCTYPE html>
<html <?php language_attributes(); ?>>
<head>
    <meta charset="<?php bloginfo('charset'); ?>">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Админ-панель бронирований</title>
    <?php wp_head(); ?>
    <style>
    .booking-admin-container {
        max-width: 1200px;
        margin: 2rem auto;
        padding: 0 20px;
    }

    .calendar-wrapper {
        margin: 2rem 0;
        background: white;
        padding: 1.5rem;
        border-radius: 12px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.05);
    }

    .calendar-nav {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 1.5rem;
    }

    .calendar-nav button {
        background: #3498db;
        color: white;
        border: none;
        padding: 0.8rem 1.5rem;
        border-radius: 6px;
        cursor: pointer;
        transition: background 0.3s;
    }

    .calendar-nav button:hover {
        background: #2980b9;
    }

    .calendar-table {
        width: 100%;
        border-collapse: collapse;
    }

    .calendar-table th,
    .calendar-table td {
        padding: 1rem;
        text-align: center;
        border: 1px solid #eee;
        height: 60px;
    }

    .calendar-table th {
        background: #f8f9fa;
        font-weight: 500;
    }

    .calendar-day {
        cursor: pointer;
        transition: background 0.2s;
        position: relative;
    }

    .calendar-day:hover {
        background: #f8f9fa;
    }

    .calendar-day.active {
        background: #3498db;
        color: white;
    }

    .event-count {
        font-size: 0.8em;
        color: #666;
        position: absolute;
        bottom: 2px;
        right: 2px;
    }

    .calendar-day.active .event-count {
        color: white;
    }

    .other-month {
        background: #fafafa;
        color: #999;
    }

    .today {
        background: #e3f2fd;
    }

    #noBookingsMessage {
        display: none;
        padding: 1.5rem;
        background: #f8f9fa;
        border-radius: 8px;
        color: #666;
        text-align: center;
        margin: 2rem 0;
    }

    .bookings-list {
        display: flex;
        flex-direction: column;
        gap: 2rem;
    }

    .booking-day-card {
        background: #fff;
        border-radius: 12px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
        padding: 1.5rem;
    }

    .booking-date-header {
        font-size: 1.5rem;
        color: #2c3e50;
        margin-bottom: 1.5rem;
        padding-bottom: 1rem;
        border-bottom: 2px solid #3498db;
    }

    .booking-item {
        padding: 1.5rem;
        margin-bottom: 1.5rem;
        background: #f8f9fa;
        border-radius: 8px;
        transition: transform 0.2s;
        border: 1px solid #eee;
    }

    .booking-item:hover {
        transform: translateY(-2px);
        box-shadow: 0 3px 8px rgba(0, 0, 0, 0.08);
    }

    .client-info div {
        margin: 0.8rem 0;
        font-size: 1rem;
    }

    .info-label {
        color: #3498db;
        font-weight: 500;
        min-width: 80px;
        display: inline-block;
    }

    .actions {
        margin-top: 1.5rem;
        display: flex;
        gap: 1rem;
        flex-wrap: wrap;
    }

    .btn {
        padding: 0.8rem 1.5rem;
        border: none;
        border-radius: 6px;
        cursor: pointer;
        font-size: 0.95rem;
        transition: all 0.3s;
        min-width: 120px;
        text-align: center;
    }

    .btn-edit {
        background: #3498db;
        color: white;
    }

    .btn-edit:hover {
        background: #2980b9;
    }

    .btn-delete {
        background: #e74c3c;
        color: white;
    }

    .btn-delete:hover {
        background: #c0392b;
    }

    #editModal {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0,0,0,0.5);
        z-index: 1000;
        backdrop-filter: blur(3px);
    }

    .modal-content {
        background: white;
        max-width: 500px;
        margin: 3rem auto;
        padding: 2rem;
        border-radius: 12px;
        position: relative;
    }

    @media (max-width: 768px) {
        .calendar-table td, .calendar-table th {
            padding: 0.5rem;
            font-size: 0.9rem;
        }
        
        .calendar-nav button {
            padding: 0.6rem 1rem;
        }
        
        .booking-admin-container {
            padding: 0 15px;
        }
    }
    </style>
</head>
<body style="margin:0; background:#f0f0f1;">

<div class="booking-admin-container">
    <h1>Управление записями</h1>
    
    <div class="calendar-wrapper">
        <div class="calendar-nav">
            <button onclick="changeMonth(-1)">&larr; Предыдущий</button>
            <h3><?= $current_month->format('F Y') ?></h3>
            <button onclick="changeMonth(1)">Следующий &rarr;</button>
        </div>
        
        <table class="calendar-table">
            <tr>
                <th>Пн</th><th>Вт</th><th>Ср</th><th>Чт</th><th>Пт</th><th>Сб</th><th>Вс</th>
            </tr>
            <?php
            $day = 1;
            $first_day = (int)$current_month->format('N');
            $total_days = (int)$current_month->format('t');
            $currentDate = new DateTime();
            
            for ($i = 0; $i < 6; $i++) {
                echo '<tr>';
                for ($j = 1; $j <= 7; $j++) {
                    $cell_class = [];
                    $date_str = null;
                    
                    if (($i === 0 && $j < $first_day) || $day > $total_days) {
                        $diff = $day > $total_days ? $day - $total_days : -($first_day - $j);
                        $temp_date = clone $current_month;
                        $temp_date->modify($diff . ' days');
                        $date_str = $temp_date->format('Y-m-d');
                        $cell_class[] = 'other-month';
                    } else {
                        $date_str = $current_month->format('Y-m-') . str_pad($day, 2, '0', STR_PAD_LEFT);
                        if ($date_str === $currentDate->format('Y-m-d')) {
                            $cell_class[] = 'today';
                        }
                        $day++;
                    }

                    $count = $bookings_count[$date_str]->count ?? 0;
                    $display_day = $date_str ? explode('-', $date_str)[2] : '';
                    
                    echo '<td class="calendar-day ' . implode(' ', $cell_class) . '" 
                         data-date="' . $date_str . '"
                         onclick="selectDate(this)">';
                    
                    echo '<div>' . $display_day . '</div>';
                    if ($count > 0) {
                        echo '<span class="event-count">(' . $count . ')</span>';
                    }
                    
                    echo '</td>';
                }
                echo '</tr>';
                if ($day > $total_days) break;
            }
            ?>
        </table>
    </div>

    <div id="noBookingsMessage">Нет записей на выбранную дату</div>

    <div class="bookings-list">
        <?php if (empty($grouped)): ?>
            <div class="no-bookings">Нет активных записей</div>
        <?php else: ?>
            <?php foreach ($grouped as $date => $items): ?>
                <div class="booking-day-card" data-date="<?= esc_attr($date) ?>">
                    <div class="booking-date-header"><?= date('d.m.Y', strtotime($date)) ?></div>
                    <?php foreach ($items as $booking): ?>
                        <div class="booking-item">
                            <div class="client-info">
                                <div><span class="info-label">Время:</span><?= esc_html($booking->start_time) ?> - <?= esc_html($booking->end_time) ?></div>
                                <div><span class="info-label">Имя:</span><?= esc_html($booking->client_name) ?></div>
                                <div><span class="info-label">Телефон:</span><?= esc_html($booking->client_phone) ?></div>
                                <div><span class="info-label">Услуга:</span><?= esc_html($booking->service_name) ?></div>
                            </div>
                            <div class="actions">
                                <button class="btn btn-edit" 
                                    data-id="<?= $booking->id ?>"
                                    data-date="<?= esc_attr($booking->booking_date) ?>"
                                    data-start="<?= esc_attr(substr($booking->start_time, 0, 5)) ?>"
                                    data-end="<?= esc_attr(substr($booking->end_time, 0, 5)) ?>"
                                    data-name="<?= esc_attr($booking->client_name) ?>"
                                    data-phone="<?= esc_attr($booking->client_phone) ?>"
                                    data-email="<?= esc_attr($booking->client_email) ?>">
                                    Изменить
                                </button>
                                </button>
                                <button class="btn btn-delete" data-id="<?= $booking->id ?>">Удалить</button>
                            </div>
                        </div>
                    <?php endforeach; ?>
                </div>
            <?php endforeach; ?>
        <?php endif; ?>
    </div>
</div>

<div id="editModal">
    <div class="modal-content">
        <h3>Редактирование записи</h3>
        <form id="editForm">
            <input type="hidden" name="nonce" value="<?= wp_create_nonce('edit_booking_nonce') ?>">
            <input type="hidden" name="booking_id" id="editBookingId">
            <div class="form-group">
                <label>Дата:</label>
                <input type="date" name="date" id="editDate" required>
            </div>
            <div class="form-group">
                <label>Время начала:</label>
                <input type="time" name="start_time" id="editStart" required>
            </div>
            <div class="form-group">
                <label>Время окончания:</label>
                <input type="time" name="end_time" id="editEnd" required>
            </div>
            <div class="form-group">
                <label>Имя клиента:</label>
                <input type="text" name="name" id="editName" required>
            </div>
            <div class="form-group">
                <label>Телефон:</label>
                <input type="tel" name="phone" id="editPhone" required>
            </div>
            <div class="form-group">
                <label>Email:</label>
                <input type="email" name="email" id="editEmail" required>
            </div>
            <button type="submit" class="btn btn-edit">Сохранить</button>
        </form>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', () => {
    let isProcessing = false;
    let selectedDate = null;
    
    // Обработчик кликов по календарю
    document.querySelector('.calendar-table').addEventListener('click', (e) => {
        const cell = e.target.closest('.calendar-day');
        if(cell) selectDate(cell);
    });

    // Навигация по месяцам
        window.changeMonth = function(offset) {
        const url = new URL(window.location.href);
        const currentMonth = url.searchParams.get('month') || '<?= $current_month->format('Y-m') ?>';
        const newDate = new Date(currentMonth + '-01');
        newDate.setMonth(newDate.getMonth() + offset);
        url.searchParams.set('month', newDate.toISOString().slice(0,7));
        window.location.href = url.href;
    };
    
    window.selectDate = function(cell) {
        const date = cell.dataset.date;
        if(!date) return;
    
        document.querySelectorAll('.calendar-day').forEach(c => {
            c.classList.remove('active');
        });
        
        cell.classList.add('active');
        selectedDate = date;
        
        document.querySelectorAll('.booking-day-card').forEach(card => {
            card.style.display = card.dataset.date === date ? 'block' : 'none';
        });
        
        document.getElementById('noBookingsMessage').style.display = 
            document.querySelector('.booking-day-card[data-date="' + date + '"]') ? 'none' : 'block';
    };

    // Обработка удаления
    async function handleDelete(button) {
        if(isProcessing) return;
        isProcessing = true;

        try {
            const item = button.closest('.booking-item');
            item.style.opacity = '0.5';
            
            const response = await fetch('/wp-admin/admin-ajax.php', {
                method: 'POST',
                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                body: new URLSearchParams({
                    action: 'delete_booking',
                    booking_id: button.dataset.id
                })
            });

            const data = await response.json();

            if(!response.ok || !data.success) {
                throw new Error(data.data || 'Ошибка сервера');
            }

            item.style.transition = 'all 0.4s';
            item.style.transform = 'translateX(-100%)';
            item.style.opacity = '0';
            
            setTimeout(() => {
                item.remove();
                isProcessing = false;
            }, 400);

        } catch (error) {
            alert(error.message);
            button.disabled = false;
            item.style.opacity = '1';
            isProcessing = false;
        }
    }

    // Обработчики удаления
    ['click', 'touchend'].forEach(event => {
        document.body.addEventListener(event, (e) => {
            const btn = e.target.closest('.btn-delete');
            if(!btn || isProcessing) return;
            
            e.preventDefault();
            if(confirm('Удалить запись?')) {
                btn.disabled = true;
                handleDelete(btn);
            }
        }, { passive: false });
    });

    // Редактирование записей
    document.getElementById('editForm').addEventListener('submit', async (e) => {
        e.preventDefault();
        const form = e.target;
        const submitBtn = form.querySelector('button[type="submit"]');
        
        try {
            submitBtn.disabled = true;
            submitBtn.textContent = 'Сохранение...';

            const formData = {
                booking_id: form.booking_id.value,
                date: form.date.value,
                start_time: form.start_time.value,
                end_time: form.end_time.value,
                name: form.name.value,
                phone: form.phone.value,
                email: form.email.value,
                nonce: form.nonce.value
            };

            const response = await fetch('/wp-admin/admin-ajax.php', {
                method: 'POST',
                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                body: new URLSearchParams(formData)
            });

            const data = await response.json();

            if(!response.ok || !data.success) {
                throw new Error(data.data || 'Ошибка сервера');
            }

            // Обновление интерфейса
            const updatedItem = document.querySelector(`.btn-edit[data-id="${formData.booking_id}"]`);
            if(updatedItem) {
                updatedItem.dataset.bookingDate = formData.date;
                updatedItem.dataset.startTime = formData.start_time;
                updatedItem.dataset.endTime = formData.end_time;
                updatedItem.dataset.clientName = formData.name;
                updatedItem.dataset.clientPhone = formData.phone;
                updatedItem.dataset.clientEmail = formData.email;

                const itemContainer = updatedItem.closest('.booking-item');
                itemContainer.querySelectorAll('.info-label').forEach(label => {
                    const field = label.textContent.replace(':', '').trim();
                    const valueElement = label.nextElementSibling;
                    switch(field) {
                        case 'Время':
                            valueElement.textContent = `${formData.start_time} - ${formData.end_time}`;
                            break;
                        case 'Имя':
                            valueElement.textContent = formData.name;
                            break;
                        case 'Телефон':
                            valueElement.textContent = formData.phone;
                            break;
                    }
                });
            }

            document.getElementById('editModal').style.display = 'none';
            alert('Изменения успешно сохранены!');

        } catch (error) {
            console.error('Ошибка сохранения:', error);
            alert(error.message);
        } finally {
            submitBtn.disabled = false;
            submitBtn.textContent = 'Сохранить';
        }
    });

    // Открытие модалки редактирования
    // Исправленный код обработчика клика
document.body.addEventListener('click', (e) => {
    const btn = e.target.closest('.btn-edit');
    if(!btn) return;

    e.preventDefault();
    
    // Получаем данные через dataset с правильными именами
    const bookingData = {
        id: btn.dataset.id,
        date: btn.dataset.date,
        start: btn.dataset.start,
        end: btn.dataset.end,
        name: btn.dataset.name,
        phone: btn.dataset.phone,
        email: btn.dataset.email
    };

    console.log('DOM Element:', btn);
    console.log('Booking Data:', bookingData);

    // Расширенная проверка данных
    if(
        !bookingData.id || 
        !bookingData.date || 
        !bookingData.start || 
        !bookingData.end
    ) {
        console.error('Invalid data attributes:', {
            element: btn,
            html: btn.outerHTML,
            dataset: btn.dataset
        });
        alert('Ошибка: Некорректные данные записи');
        return;
    }

    // Заполнение формы
    document.getElementById('editBookingId').value = bookingData.id;
    document.getElementById('editDate').value = bookingData.date;
    document.getElementById('editStart').value = bookingData.start.substring(0, 5); // Форматирование времени
    document.getElementById('editEnd').value = bookingData.end.substring(0, 5);
    document.getElementById('editName').value = bookingData.name;
    document.getElementById('editPhone').value = bookingData.phone;
    document.getElementById('editEmail').value = bookingData.email;
    
    document.getElementById('editModal').style.display = 'block';
});

    // Закрытие модалки
    document.addEventListener('click', (e) => {
        if(e.target.id === 'editModal') {
            document.getElementById('editModal').style.display = 'none';
        }
    });

    // Инициализация текущей даты
    const todayCell = document.querySelector('.calendar-day.today');
    if(todayCell) selectDate(todayCell);
});
</script>

<?php wp_footer(); ?>
</body>
</html>
